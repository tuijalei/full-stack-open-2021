{"version":3,"sources":["components/SearchFilterForm.js","components/PersonForm.js","components/Contact.js","components/Persons.js","services/persons.js","components/Notification.js","components/Error.js","App.js","index.js"],"names":["SearchFilter","props","searchFilter","handleSearch","value","onChange","PersonForm","name","handleNames","number","handleNumbers","addName","onSubmit","type","Contact","id","deleteContact","style","width","paddingBottom","onClick","Persons","persons","filterThroughNames","filter","person","toLowerCase","includes","map","contact","baseUrl","exportedObjects","getAll","axios","get","then","response","data","create","newObject","post","delete","updateNumber","put","Notification","message","className","Error","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","setSearchFilter","errorMessage","setErrorMessage","displayMessage","setDisplayMessage","useEffect","personsService","initPersons","SearchFilterForm","event","target","preventDefault","personObject","console","log","some","p","window","confirm","find","changedContact","returnedContact","catch","error","concat","setTimeout","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5c4704e3.chunk.js","sourcesContent":["import React from 'react' \r\n\r\n// Form for search field\r\nconst SearchFilter = (props) => {\r\n  const {searchFilter, handleSearch} = props\r\n    return(\r\n        <form>\r\n        <div> Filter shown with \r\n          <input\r\n            value={searchFilter}\r\n            onChange={handleSearch} />\r\n        </div>\r\n      </form>\r\n    )\r\n}\r\n\r\nexport default SearchFilter;","import React from 'react' \r\n\r\n// Adding a new contact to phonebook\r\nconst PersonForm = (props) => {\r\n    const {name, handleNames, number,  handleNumbers, addName} = props\r\n    return(\r\n        <form onSubmit={addName}>\r\n            <div>Name: \r\n                <input\r\n                    value={name}\r\n                    onChange={handleNames} />\r\n            </div>\r\n            <div>Number:\r\n                <input\r\n                    value={number}\r\n                    onChange={handleNumbers} />\r\n            </div>\r\n            <div>\r\n                <button type=\"submit\">Add</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default PersonForm;","import React from 'react'\r\n\r\n// Initializing one contact for Phonebook\r\n// Putting it onto a table with delete button\r\nconst Contact = (props) => {\r\n    const {id, name, number, deleteContact} = props\r\n    \r\n    return(\r\n        <table>\r\n            <tbody>\r\n                <tr>\r\n                    <td style={{width:'130px', paddingBottom:'5px'}}>{name}</td>\r\n                    <td style={{width:'130px', paddingBottom:'5px'}}>{number}</td>\r\n                    <td><button onClick={() => deleteContact(id)}> delete </button></td>\r\n                 </tr>\r\n            </tbody> \r\n        </table>\r\n    )\r\n}\r\n\r\nexport default Contact;","import React from 'react' \r\nimport Contact from './Contact'\r\n\r\n// Showing all contacts or searched ones\r\nconst Persons = (props) => {\r\n    const {persons, searchFilter, deleteContact} = props\r\n\r\n    //If search is used\r\n    const filterThroughNames = searchFilter\r\n        ? persons.filter(person => person.name.toLowerCase().includes(searchFilter.toLowerCase()))\r\n        : persons\r\n\r\n    return(\r\n        <div>\r\n            {filterThroughNames.map(contact =>\r\n                <Contact key={contact.id} id={contact.id} name={contact.name} number={contact.number} deleteContact={deleteContact}/>\r\n            )}\r\n        </div>\r\n    )  \r\n}\r\n\r\nexport default Persons;","import axios from 'axios'\r\n\r\n// ** All communication with server in this module **\r\n\r\nconst baseUrl = '/api/persons'\r\n\r\n\r\n// Fetching all data from server\r\nconst getAll = () => {\r\n    return axios.get(baseUrl).then(response => response.data)\r\n}\r\n\r\n// Creating a new contact and sending to server\r\nconst create = newObject => {\r\n    return axios.post(baseUrl, newObject).then(response => response.data)\r\n}\r\n\r\n// Deleting a contact from server\r\nconst deleteContact = id => {\r\n    return axios.delete(`${baseUrl}/${id}`).then(response => response.data)\r\n}\r\n\r\n// Updating a number for an existing contact\r\nconst updateNumber = (id, newObject) => {\r\n    return axios.put(`${baseUrl}/${id}`, newObject).then(response => response.data)\r\n}\r\n\r\nconst exportedObjects = {getAll, create, deleteContact, updateNumber}\r\n\r\nexport default exportedObjects;","import React from 'react'\r\n\r\nconst Notification = ({message}) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"notification\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification;","import React from 'react'\r\n\r\nconst Error = ({message}) => {\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import React, { useState, useEffect } from 'react'\nimport SearchFilterForm from './components/SearchFilterForm'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport personsService from './services/persons'\nimport Notification from './components/Notification'\nimport Error from './components/Error'\n\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [newName, setNewName] = useState('')\n  const [newNumber, setNewNumber] = useState('')\n  const [searchFilter, setSearchFilter] = useState('')\n  const [errorMessage, setErrorMessage] = useState(null)\n  const [displayMessage, setDisplayMessage] = useState(null)\n  \n  // Fetching data from server using Effect Hook\n  useEffect(() => {\n    personsService\n      .getAll()\n      .then(initPersons => {\n        setPersons(initPersons)\n      })\n  }, [])\n\n  // Adding a new name to persons\n  const addName = (event) => {\n    // Preventing default action of the event\n    event.preventDefault()\n\n    const personObject = {\n      name: newName,\n      number: newNumber\n    }\n\n    console.log(personObject.name)\n\n    // Checking if there's a duplicate in persons\n    if(persons.some(p => p.name === personObject.name)){\n      // Confirm the number changing\n      if(window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n        const contact = persons.find(p => p.name === personObject.name)\n        const changedContact = { ...contact, number: personObject.number}\n        \n        // Let's do it for server\n        personsService\n        .updateNumber(changedContact.id, changedContact)\n        .then(returnedContact => { \n          setPersons(persons.map(person => person.id !== contact.id ? person : returnedContact))\n          setDisplayMessage(`Updated contact ${contact.name} succesfully!`)\n          setNewName('')\n          setNewNumber('')\n        })\n        //If wanted contact already deleted, alarm the user\n        .catch(error => {\n          setErrorMessage(`Information of ${contact.name} has already been removed from server`)\n          setPersons(persons.filter(p => p.id !== personObject.id))\n        })\n      } \n\n    // Sending a whole new contact to server\n    } else {\n      personsService\n      .create(personObject)\n      .then(newObject => {\n        setDisplayMessage(`Added ${personObject.name}`) \n        setPersons(persons.concat(newObject))\n        setNewName('')\n        setNewNumber('')\n         })\n      .catch(error => {\n        console.log(error.response.data)\n        setErrorMessage(error.response.data.error)\n        setTimeout(() => {\n          setErrorMessage(null)\n          setDisplayMessage(null)\n        }, 5000)  \n      })\n    }\n\n    setTimeout(() => {\n      setErrorMessage(null)\n      setDisplayMessage(null)\n    }, 5000)  \n  }\n\n  // Deleting a contact if button pressed and confirmed\n  const deleteContact = (id) => {\n    // Searching the contact name of specific id\n    const person = persons.find(p => p.id === id)\n    console.log(person.name)\n    \n    if(window.confirm(`Delete ${person.name}?`)) {\n        personsService.deleteContact(id)\n        .then(() => { setPersons(persons.filter(p => p.id !== id))})\n        setDisplayMessage(`${person.name} with number ${person.number} succesfully deleted from the phonebook`)\n    } else {\n        setDisplayMessage(`${person.name} not removed - cancelled by the user`)\n    }\n\n    setTimeout(() => {\n        setErrorMessage(null)\n        setDisplayMessage(null)\n      }, 5000)  \n  }\n\n  // Handling name changing when written\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  // Handling number changing when written\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  // Handling searchfilter changing when written\n  const handleSearchFilterChange = (event) => {\n    setSearchFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={displayMessage} />\n      <Error message={errorMessage} />\n      <SearchFilterForm searchFilter={searchFilter} handleSearch={handleSearchFilterChange}/>\n\n      <h3>Add a new contact</h3>\n      <PersonForm name={newName} handleNames={handleNameChange}\n                  number={newNumber} handleNumbers={handleNumberChange}\n                  addName={addName}/>\n\n      <h3>Numbers</h3>\n      <Persons persons={persons} searchFilter={searchFilter} deleteContact={deleteContact}/>\n    </div>\n  )\n}\n\nexport default App;","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}